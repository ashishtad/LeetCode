

/*589. N-ary Tree Preorder Traversal
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<int> preorder(Node* root) {
        vector<int> result;
        if(!root)
            return result;
        
        traverse(root,result);

        return result;
    }

    void traverse( Node *root, vector<int> &result){
        if(!root)
            return;
        
        result.push_back(root->val);

        for( Node *child: root->children)
            traverse(child, result);
    }
};